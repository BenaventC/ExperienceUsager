[2,"\n"]
[1,"\r\n\r\nprocessing file: script00_complaint.qmd\r\n"]
[1,"\r  |                                                                            \r  |                                                                      |   0%\r  |                                                                            \r  |..                                                                    |   3%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |....                                                                  |   5%\r\nlabel:"]
[1," 00 (with options) \r\n"]
[1,"List of 3\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 00, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\r\nv ggplot2 3.3.6     v purrr   0.3.4\r\nv tibble  3.1.7     v dplyr   1.0.9\r\nv tidyr   1.2.0     v stringr 1.4.0\r\nv readr   2.0.0     v forcats 0.5.1\r\n"]
[1,"-- Conflicts ------------------------------------------ tidyverse_conflicts() --\r\nx dplyr::filter() masks stats::filter()\r\nx dplyr::lag()    masks stats::lag()\r\n\r\nAttaching package: 'lubridate'\r\n\r\nThe following objects are masked from 'package:base':\r\n\r\n    date, intersect, setdiff, union\r\n\r\n"]
[1,"\r\nAttaching package: 'zoo'\r\n\r\nThe following objects are masked from 'package:base':\r\n\r\n    as.Date, as.Date.numeric\r\n\r\n"]
[1,"\r\nAttaching package: 'scales'\r\n\r\nThe following object is masked from 'package:purrr':\r\n\r\n    discard\r\n\r\nThe following object is masked from 'package:readr':\r\n\r\n    col_factor\r\n\r\n"]
[1,"\r\nAttaching package: 'cowplot'\r\n\r\nThe following object is masked from 'package:ggpubr':\r\n\r\n    get_legend\r\n\r\nThe following object is masked from 'package:lubridate':\r\n\r\n    stamp\r\n\r\n"]
[1,"\r  |                                                                            \r  |.....                                                                 |   8%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |.......                                                               |  10%\r\nlabel: 02 (with options) \r\nList of 3\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 02, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"\r  |                                                                            \r  |.........                                                             |  13%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |...........                                                           |  15%\r\nlabel: 03 (with options) \r\nList of 3\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 03, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"\r  |                                                                            \r  |.............                                                         |  18%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |..............                                                        |  21%\r\nlabel: 04 (with options) \r\nList of 3\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 04, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"Rows: 16576 Columns: 30\r\n-- Column specification --------------------------------------------------------\r\nDelimiter: \",\"\r\nchr  (21): etat, statut, titre, description, poste_comme, ressenti, pays, ps...\r\ndbl   (6): id, code_postal_typologie_1, code_postal_usager, experiences_simi...\r\ndate  (3): date_ecrit, date_publie, date_premiere_reponse\r\n"]
[1,"\r\ni Use `spec()` to retrieve the full column specification for this data.\r\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\r\n"]
[1,"\r  |                                                                            \r  |................                                                      |  23%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |..................                                                    |  26%\r\nlabel: 05 (with options) \r\nList of 4\r\n $ eval               : logi FALSE\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 05, eval=FALSE, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n\r  |                                                                            \r  |....................                                                  |  28%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |......................                                                |  31%\r\nlabel: 06 (with options) \r\nList of 4\r\n $ eval               : logi TRUE\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 06, eval=TRUE, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"Rows: 14127 Columns: 9\r\n-- Column specification --------------------------------------------------------\r\nDelimiter: \";\"\r\nchr (2): word, polarity\r\ndbl (7): id, joy, fear, sadness, anger, surprise, disgust\r\n"]
[1,"\r\ni Use `spec()` to retrieve the full column specification for this data.\r\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\r\nJoining, by = \"lemma\"\r\n"]
[1,"Joining, by = c(\"doc_id\", \"paragraph_id\", \"sentence_id\", \"token_id\")\r\n"]
[1,"\r  |                                                                            \r  |.......................                                               |  33%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |.........................                                             |  36%\r\nlabel: 07 (with options) \r\nList of 3\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 07, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"\r  |                                                                            \r  |...........................                                           |  38%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |.............................                                         |  41%\r\nlabel: 08 (with options) \r\nList of 3\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 08, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"\r  |                                                                            \r  |...............................                                       |  44%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |................................                                      |  46%\r\nlabel: 09 (with options) \r\nList of 3\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 09, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"\r  |                                                                            \r  |..................................                                    |  49%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |....................................                                  |  51%\r\nlabel: 10 (with options) \r\nList of 3\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 10, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"\r  |                                                                            \r  |......................................                                |  54%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |.......................................                               |  56%\r\nlabel: 11 (with options) \r\nList of 3\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 11, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"\r  |                                                                            \r  |.........................................                             |  59%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |...........................................                           |  62%\r\nlabel: 12 (with options) \r\nList of 3\r\n $ echo               : logi TRUE\r\n $ original.params.src: chr \"r 12, echo=TRUE\"\r\n $ chunk.echo         : logi TRUE\r\n\r\n"]
[1,"\r  |                                                                            \r  |.............................................                         |  64%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |...............................................                       |  67%\r\nlabel: 13 (with options) \r\nList of 3\r\n $ echo               : logi TRUE\r\n $ original.params.src: chr \"r 13, echo=TRUE\"\r\n $ chunk.echo         : logi TRUE\r\n\r\n"]
[1,"\r  |                                                                            \r  |................................................                      |  69%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |..................................................                    |  72%\r\nlabel: 14 (with options) \r\nList of 4\r\n $ echo               : logi FALSE\r\n $ include            : logi FALSE\r\n $ original.params.src: chr \"r 14, echo=FALSE, include=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"Warning in (function (A, nv = 5, nu = nv, maxit = 1000, work = nv + 7, reorth = TRUE,  :\r\n  You're computing too large a percentage of total singular values, use a standard svd instead.\r\n"]
[1,"\r  |                                                                            \r  |....................................................                  |  74%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |......................................................                |  77%\r\nlabel: 15 (with options) \r\nList of 3\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 15, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"\r\nAttaching package: 'ape'\r\n\r\nThe following object is masked from 'package:ggpubr':\r\n\r\n    rotate\r\n\r\n"]
[1,"\r\n---------------------\r\nWelcome to dendextend version 1.16.0\r\nType citation('dendextend') for how to cite the package.\r\n\r\nType browseVignettes(package = 'dendextend') for the package vignette.\r\nThe github page is: https://github.com/talgalili/dendextend/\r\n\r\nSuggestions and bug-reports can be submitted at: https://github.com/talgalili/dendextend/issues\r\nYou may ask questions at stackoverflow, use the r and dendextend tags: \r\n\t https://stackoverflow.com/questions/tagged/dendextend\r\n\r\n\tTo suppress this message use:  suppressPackageStartupMessages(library(dendextend))\r\n---------------------\r\n\r\n\r\nAttaching package: 'dendextend'\r\n\r\nThe following objects are masked from 'package:ape':\r\n\r\n    ladderize, rotate\r\n\r\nThe following object is masked from 'package:ggpubr':\r\n\r\n    rotate\r\n\r\nThe following object is masked from 'package:stats':\r\n\r\n    cutree\r\n\r\n"]
[1,"\r  |                                                                            \r  |........................................................              |  79%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |.........................................................             |  82%\r\nlabel: 16 (with options) \r\nList of 3\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 16, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"\r  |                                                                            \r  |...........................................................           |  85%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |.............................................................         |  87%\r\nlabel: 17 (with options) \r\nList of 3\r\n $ echo               : logi TRUE\r\n $ original.params.src: chr \"r 17, echo=TRUE\"\r\n $ chunk.echo         : logi TRUE\r\n\r\n"]
[1,"\r  |                                                                            \r  |...............................................................       |  90%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |.................................................................     |  92%\r\nlabel: 17b (with options) \r\nList of 3\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 17b, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"\r  |                                                                            \r  |..................................................................    |  95%\r\n  ordinary text without R code\r\n\r\n\r  |                                                                            \r  |....................................................................  |  97%\r\nlabel: 18 (with options) \r\nList of 3\r\n $ echo               : logi FALSE\r\n $ original.params.src: chr \"r 18, echo=FALSE\"\r\n $ chunk.echo         : logi FALSE\r\n\r\n"]
[1,"`geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = \"cs\")'\r\n"]
[1,"\r  |                                                                            \r  |......................................................................| 100%\r\n  ordinary text without R code\r\n\r\n\r\n"]
[1,"output file: script00_complaint.knit.md\r\n\r\n"]
[1,"There were 49 warnings (use warnings() to see them)\r\n"]
[1,"pandoc \n  to: beamer\n  output-file: script00_complaint.tex\n  standalone: true\n  pdf-engine: xelatex\n  variables:\n    graphics: true\n    tables: true\n  default-image-extension: pdf\n  slide-level: 2\n  toc: true\n  toc-depth: 3\n  \nmetadata\n  block-headings: true\n  title: 'Injustice, émotions et actions de justice'\n  author: Christophe Benavent\n  date: 10 janvier 2023\n  date-format: long\n  institute: Université Dauphine-PSL - M&O - Acss\n  'pdf-engine:latex': xelatex\n  fontsize: 9pt\n  bibliography:\n    - complaint.bib\n  toc-title: Sommaire\n  colorlinks: true\n  aspectratio: 54\n  theme: Boadilla\n  fonttheme: serif\n  \n"]
[1,"running xelatex - 1\n"]
[1,"  This is XeTeX, Version 3.141592653-2.6-0.999994 (TeX Live 2022) (preloaded format=xelatex)\n   restricted \\write18 enabled.\n  entering extended mode\n  \nrunning xelatex - 2\n"]
[1,"  This is XeTeX, Version 3.141592653-2.6-0.999994 (TeX Live 2022) (preloaded format=xelatex)\n   restricted \\write18 enabled.\n  entering extended mode\n  \n\nOutput created: script00_complaint.pdf\n\nWatching files for changes\nBrowse at http://localhost:4028/web/viewer.html\n"]
